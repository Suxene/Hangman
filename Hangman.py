print("Let's play hangman") or globals().__setitem__("word", __import__("random").choice(["itertools", "piscord", "python"])) or globals().__setitem__("letters", list()) or [x for x in iter((lambda: print(*["_" if x not in letters else x for x in word], f"\t{8 - len([x for x in letters if x not in word])} remaining tr{['ies', 'y'][8 - len([x for x in letters if x not in word]) == 1]}{', letter{}: '.format('s' if len(letters)>1 else '') if letters else ''}", *map(str.upper, letters), sep="") or globals().__setitem__("letter", input("Enter a letter\t")) or {letter in word: lambda: letters.append(letter) or print("The letter is in the word"), letter not in word: lambda: letters.append(letter) or print("The letter isn't in the word"), len([x for x in (letters + [letter]) if x not in word]) >= 8: lambda: print(f"You lose, the word was \'{word}\'") or __import__("os").system("pause") or quit(), all(map(([letter]+letters).__contains__, word)): lambda: print(f"You won in {len(letters)} move{'s' if len(letters) > 1 else ''}") or __import__("os").system("pause") or quit(), letter in letters: lambda: print("Letter already entered"), len(letter)>1 or not letter.isalpha(): lambda: print("Expected a letter"), letter == "quit": quit}[True]()), 1)]

